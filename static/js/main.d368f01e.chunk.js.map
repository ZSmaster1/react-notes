{"version":3,"sources":["components/NoteCard.js","pages/Notes.js","pages/Create.js","components/Layout.js","App.js","index.js"],"names":["useStyles","makeStyles","avatar","backgroundColor","note","category","yellow","green","pink","blue","NoteCard","handleDelete","classes","Card","elevation","CardHeader","Avatar","className","title","charAt","toUpperCase","action","IconButton","onClick","id","subheader","CardContent","Typography","variant","color","details","Notes","useState","notes","setNotes","getAllNotes","a","Entries","entries","filter","startsWith","map","useEffect","fetchedNotes","Container","breakpointCols","default","1100","700","columnClassName","del","field","marginTop","marginBottom","display","Create","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","size","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","Math","floor","random","set","then","alert","catch","err","TextField","onChange","target","value","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","drawerWidth","theme","page","background","width","padding","spacing","root","drawer","drawerPaper","active","appBar","marginLeft","date","flexGrow","toolbar","mixins","Layout","children","history","useHistory","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","AppBar","position","Toolbar","format","Date","Drawer","paper","anchor","List","item","ListItem","button","push","pathname","ListItemIcon","ListItemText","primary","createMuiTheme","palette","main","secondary","purple","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d368f01e.chunk.js","sourcesContent":["import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined'\nimport { makeStyles } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar'\nimport { yellow, green, pink, blue } from '@material-ui/core/colors'\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: (note) => {\n      if (note.category == 'work') {\n        return yellow[700]\n      }\n      if (note.category == 'money') {\n        return green[500]\n      }\n      if (note.category == 'todos') {\n        return pink[500]\n      }\n      return blue[500]\n    },\n  }\n})\n\nexport default function NoteCard({ note, handleDelete }) {\n  const classes = useStyles(note)\n\n  return (\n    <div>\n      <Card elevation={1}>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>\n              {note.title.charAt(0).toUpperCase()}\n            </Avatar>}\n          action={\n            <IconButton onClick={() => handleDelete(note.id)}>\n              <DeleteOutlined />\n            </IconButton>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {note.details}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport Container from '@material-ui/core/Container'\nimport Masonry from 'react-masonry-css'\nimport NoteCard from '../components/NoteCard'\nimport { entries as Entries } from 'idb-keyval';\nimport { del } from 'idb-keyval';\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n  const getAllNotes = async () => {\n    const entries = await Entries();\n\n    const notes = entries.filter(note => note[0].startsWith('note_'));\n\n    return notes.map(note => (note[1]));\n  }\n\n  useEffect(async() => {\n    const fetchedNotes = await getAllNotes();\n    setNotes(fetchedNotes);\n  });\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  };\n\n  return (\n    <Container>\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\">\n        {notes.map((note) => (\n          <div key={note.id}>\n            <NoteCard\n              note={note} \n              handleDelete={(id) => del(`note_${id}`)} \n            />\n          </div>\n        ))}\n      </Masonry>\n    </Container>\n  )\n}","import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { set } from 'idb-keyval';\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n})\n\nexport default function Create() {\n  const classes = useStyles()\n  const [title, setTitle] = useState('')\n  const [details, setDetails] = useState('')\n  const [titleError, setTitleError] = useState(false)\n  const [detailsError, setDetailsError] = useState(false)\n  const [category, setCategory] = useState('misc')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setTitleError(false)\n    setDetailsError(false)\n\n    if (title == '') {\n      setTitleError(true)\n    }\n\n    if (details == '') {\n      setDetailsError(true)\n    }\n\n    if (title && details) {\n      const id = Math.floor(Math.random() * 99999) + 100;\n      \n      set(`note_${id}`, {\n        id: id,\n        title: title,\n        category: category,\n        details: details,\n      }).then(() => {\n        alert('Note created!');\n      }).catch((err) => {\n        alert(`Error adding note: ${err}`);\n      })\n    }\n  }\n\n  return (\n    <Container size=\"sm\">\n      <Typography\n        variant=\"h6\"\n        color=\"textSecondary\"\n        component=\"h2\"\n        gutterBottom\n      >\n        Create a New Note\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField className={classes.field}\n          onChange={(e) => setTitle(e.target.value)}\n          label=\"Note Title\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          error={titleError}\n        />\n        <TextField className={classes.field}\n          onChange={(e) => setDetails(e.target.value)}\n          label=\"Details\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          error={detailsError}\n        />\n\n        <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\n            <FormControlLabel value=\"misc\" control={<Radio />} label=\"Misc\" />\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\n            <FormControlLabel value=\"reminders\" control={<Radio />} label=\"Reminders\" />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n            <FormControlLabel value=\"event\" control={<Radio />} label=\"Event\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Button\n          type=\"submit\"\n          color=\"secondary\"\n          variant=\"contained\"\n          endIcon={<KeyboardArrowRightIcon />}>\n          Submit\n        </Button>\n      </form>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport Drawer from '@material-ui/core/Drawer'\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { format } from 'date-fns'\nimport Avatar from '@material-ui/core/Avatar'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    page: {\n      background: '#f9f9f9',\n      width: '100%',\n      padding: theme.spacing(3),\n    },\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    active: {\n      background: '#f4f4f4'\n    },\n    title: {\n      padding: theme.spacing(2),\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    date: {\n      flexGrow: 1\n    },\n    toolbar: theme.mixins.toolbar,\n    avatar: {\n      marginLeft: theme.spacing(2)\n    }\n  }\n})\n\nexport default function Layout({ children }) {\n  const classes = useStyles()\n  const history = useHistory()\n  const location = useLocation()\n\n  const menuItems = [\n    { \n      text: 'My Notes', \n      icon: <SubjectOutlined color=\"secondary\" />, \n      path: '/' \n    },\n    { \n      text: 'Create Note', \n      icon: <AddCircleOutlineOutlined color=\"secondary\" />, \n      path: '/create' \n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <AppBar \n        position=\"fixed\" \n        className={classes.appBar}\n        elevation={0}\n        color=\"primary\"\n      >\n        <Toolbar>\n          <Typography className={classes.date}>\n            Today is the {format(new Date(), 'do MMMM Y')}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: classes.drawerPaper }}\n        anchor=\"left\"\n      >\n        <div>\n          <Typography variant=\"h5\" className={classes.title}>\n            Notes\n          </Typography>\n        </div>\n\n        <List>\n          {menuItems.map((item) => (\n            <ListItem \n              button \n              key={item.text} \n              onClick={() => history.push(item.path)}\n              className={location.pathname == item.path ? classes.active : null}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n        \n      </Drawer>\n\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        { children }\n      </div>\n    </div>\n  )\n}\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Notes from './pages/Notes'\nimport Create from './pages/Create'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\nimport { purple } from '@material-ui/core/colors'\nimport Layout from './components/Layout'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#fefefe'\n    },\n    secondary: purple\n  },\n  typography: {\n    fontFamily: 'Quicksand',\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  }\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Notes />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}